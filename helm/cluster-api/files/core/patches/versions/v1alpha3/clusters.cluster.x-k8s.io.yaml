- op: replace
  path: /spec/versions/0/schema
  value:
    openAPIV3Schema:
      description: Cluster is the Schema for the clusters API.
      properties:
        apiVersion:
          description: |-
            APIVersion defines the versioned schema of this representation of an object.
            Servers should convert recognized schemas to the latest internal value, and
            may reject unrecognized values.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          type: string
        kind:
          description: |-
            Kind is a string value representing the REST resource this object represents.
            Servers may infer this from the endpoint the client submits requests to.
            Cannot be updated.
            In CamelCase.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          type: string
        metadata:
          type: object
        spec:
          description: spec is the desired state of Cluster.
          properties:
            clusterNetwork:
              description: clusterNetwork is the cluster network configuration.
              properties:
                apiServerPort:
                  description: |-
                    apiServerPort specifies the port the API Server should bind to.
                    Defaults to 6443.
                  format: int32
                  type: integer
                pods:
                  description: pods is the network ranges from which Pod networks are allocated.
                  properties:
                    cidrBlocks:
                      description: cidrBlocks is a list of CIDR blocks.
                      items:
                        type: string
                      type: array
                  required:
                    - cidrBlocks
                  type: object
                serviceDomain:
                  description: serviceDomain is the domain name for services.
                  type: string
                services:
                  description: services is the network ranges from which service VIPs are allocated.
                  properties:
                    cidrBlocks:
                      description: cidrBlocks is a list of CIDR blocks.
                      items:
                        type: string
                      type: array
                  required:
                    - cidrBlocks
                  type: object
              type: object
            controlPlaneEndpoint:
              description: controlPlaneEndpoint represents the endpoint used to communicate with the control plane.
              properties:
                host:
                  description: host is the hostname on which the API server is serving.
                  type: string
                port:
                  description: port is the port on which the API server is serving.
                  format: int32
                  type: integer
              required:
                - host
                - port
              type: object
            controlPlaneRef:
              description: |-
                controlPlaneRef is an optional reference to a provider-specific resource that holds
                the details for provisioning the Control Plane for a Cluster.
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: |-
                    If referring to a piece of an object instead of an entire object, this string
                    should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within a pod, this would take on a value like:
                    "spec.containers{name}" (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]" (container with
                    index 2 in this pod). This syntax is chosen only to have some well-defined way of
                    referencing a part of an object.
                  type: string
                kind:
                  description: |-
                    Kind of the referent.
                    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                  type: string
                name:
                  description: |-
                    Name of the referent.
                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                  type: string
                namespace:
                  description: |-
                    Namespace of the referent.
                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                  type: string
                resourceVersion:
                  description: |-
                    Specific resourceVersion to which this reference is made, if any.
                    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                  type: string
                uid:
                  description: |-
                    UID of the referent.
                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                  type: string
              type: object
              x-kubernetes-map-type: atomic
            infrastructureRef:
              description: |-
                infrastructureRef is a reference to a provider-specific resource that holds the details
                for provisioning infrastructure for a cluster in said provider.
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: |-
                    If referring to a piece of an object instead of an entire object, this string
                    should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within a pod, this would take on a value like:
                    "spec.containers{name}" (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]" (container with
                    index 2 in this pod). This syntax is chosen only to have some well-defined way of
                    referencing a part of an object.
                  type: string
                kind:
                  description: |-
                    Kind of the referent.
                    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                  type: string
                name:
                  description: |-
                    Name of the referent.
                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                  type: string
                namespace:
                  description: |-
                    Namespace of the referent.
                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                  type: string
                resourceVersion:
                  description: |-
                    Specific resourceVersion to which this reference is made, if any.
                    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                  type: string
                uid:
                  description: |-
                    UID of the referent.
                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                  type: string
              type: object
              x-kubernetes-map-type: atomic
            paused:
              description: paused can be used to prevent controllers from processing the Cluster and all its associated objects.
              type: boolean
          type: object
        status:
          description: status is the observed state of Cluster.
          properties:
            conditions:
              description: conditions defines current service state of the cluster.
              items:
                description: Condition defines an observation of a Cluster API resource operational state.
                properties:
                  lastTransitionTime:
                    description: |-
                      lastTransitionTime is the last time the condition transitioned from one status to another.
                      This should be when the underlying condition changed. If that is not known, then using the time when
                      the API field changed is acceptable.
                    format: date-time
                    type: string
                  message:
                    description: |-
                      message is a human readable message indicating details about the transition.
                      This field may be empty.
                    type: string
                  reason:
                    description: |-
                      reason is the reason for the condition's last transition in CamelCase.
                      The specific API may choose whether or not this field is considered a guaranteed API.
                      This field may not be empty.
                    type: string
                  severity:
                    description: |-
                      severity provides an explicit classification of Reason code, so the users or machines can immediately
                      understand the current situation and act accordingly.
                      The Severity field MUST be set only when Status=False.
                    type: string
                  status:
                    description: status of the condition, one of True, False, Unknown.
                    type: string
                  type:
                    description: |-
                      type of condition in CamelCase or in foo.example.com/CamelCase.
                      Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                      can be useful (see .node.status.conditions), the ability to deconflict is important.
                    type: string
                required:
                  - status
                  - type
                type: object
              type: array
            controlPlaneInitialized:
              description: controlPlaneInitialized defines if the control plane has been initialized.
              type: boolean
            controlPlaneReady:
              description: controlPlaneReady defines if the control plane is ready.
              type: boolean
            failureDomains:
              additionalProperties:
                description: |-
                  FailureDomainSpec is the Schema for Cluster API failure domains.
                  It allows controllers to understand how many failure domains a cluster can optionally span across.
                properties:
                  attributes:
                    additionalProperties:
                      type: string
                    description: attributes is a free form map of attributes an infrastructure provider might use or require.
                    type: object
                  controlPlane:
                    description: controlPlane determines if this failure domain is suitable for use by control plane machines.
                    type: boolean
                type: object
              description: failureDomains is a slice of failure domain objects synced from the infrastructure provider.
              type: object
            failureMessage:
              description: |-
                failureMessage indicates that there is a fatal problem reconciling the
                state, and will be set to a descriptive error message.
              type: string
            failureReason:
              description: |-
                failureReason indicates that there is a fatal problem reconciling the
                state, and will be set to a token value suitable for
                programmatic interpretation.
              type: string
            infrastructureReady:
              description: infrastructureReady is the state of the infrastructure provider.
              type: boolean
            observedGeneration:
              description: observedGeneration is the latest generation observed by the controller.
              format: int64
              type: integer
            phase:
              description: |-
                phase represents the current phase of cluster actuation.
                E.g. Pending, Running, Terminating, Failed etc.
              type: string
          type: object
      type: object
