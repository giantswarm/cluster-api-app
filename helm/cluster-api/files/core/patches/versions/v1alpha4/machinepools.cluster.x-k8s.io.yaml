- op: replace
  path: /spec/versions/1/schema
  value:
    openAPIV3Schema:
      description: |-
        MachinePool is the Schema for the machinepools API.

        Deprecated: This type will be removed in one of the next releases.
      properties:
        apiVersion:
          description: |-
            APIVersion defines the versioned schema of this representation of an object.
            Servers should convert recognized schemas to the latest internal value, and
            may reject unrecognized values.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          type: string
        kind:
          description: |-
            Kind is a string value representing the REST resource this object represents.
            Servers may infer this from the endpoint the client submits requests to.
            Cannot be updated.
            In CamelCase.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          type: string
        metadata:
          type: object
        spec:
          description: spec is the desired state of MachinePool.
          properties:
            clusterName:
              description: clusterName is the name of the Cluster this object belongs to.
              minLength: 1
              type: string
            failureDomains:
              description: failureDomains is the list of failure domains this MachinePool should be attached to.
              items:
                type: string
              type: array
            minReadySeconds:
              description: |-
                minReadySeconds is the minimum number of seconds for which a newly created machine instances should
                be ready.
                Defaults to 0 (machine instance will be considered available as soon as it
                is ready)
              format: int32
              type: integer
            providerIDList:
              description: |-
                providerIDList are the identification IDs of machine instances provided by the provider.
                This field must match the provider IDs as seen on the node objects corresponding to a machine pool's machine instances.
              items:
                type: string
              type: array
            replicas:
              description: |-
                replicas is the number of desired machines. Defaults to 1.
                This is a pointer to distinguish between explicit zero and not specified.
              format: int32
              type: integer
            template:
              description: template describes the machines that will be created.
              properties:
                metadata:
                  description: |-
                    metadata is the standard object's metadata.
                    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      description: |-
                        annotations is an unstructured key value map stored with a resource that may be
                        set by external tools to store and retrieve arbitrary metadata. They are not
                        queryable and should be preserved when modifying objects.
                        More info: http://kubernetes.io/docs/user-guide/annotations
                      type: object
                    labels:
                      additionalProperties:
                        type: string
                      description: |-
                        labels is a map of string keys and values that can be used to organize and categorize
                        (scope and select) objects. May match selectors of replication controllers
                        and services.
                        More info: http://kubernetes.io/docs/user-guide/labels
                      type: object
                  type: object
                spec:
                  description: |-
                    spec is the specification of the desired behavior of the machine.
                    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
                  properties:
                    bootstrap:
                      description: |-
                        bootstrap is a reference to a local struct which encapsulates
                        fields to configure the Machineâ€™s bootstrapping mechanism.
                      properties:
                        configRef:
                          description: |-
                            configRef is a reference to a bootstrap provider-specific resource
                            that holds configuration details. The reference is optional to
                            allow users/operators to specify Bootstrap.DataSecretName without
                            the need of a controller.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: |-
                                If referring to a piece of an object instead of an entire object, this string
                                should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container within a pod, this would take on a value like:
                                "spec.containers{name}" (where "name" refers to the name of the container that triggered
                                the event) or if no container name is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to have some well-defined way of
                                referencing a part of an object.
                              type: string
                            kind:
                              description: |-
                                Kind of the referent.
                                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                              type: string
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            namespace:
                              description: |-
                                Namespace of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                              type: string
                            resourceVersion:
                              description: |-
                                Specific resourceVersion to which this reference is made, if any.
                                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                              type: string
                            uid:
                              description: |-
                                UID of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        dataSecretName:
                          description: |-
                            dataSecretName is the name of the secret that stores the bootstrap data script.
                            If nil, the Machine should remain in the Pending state.
                          type: string
                      type: object
                    clusterName:
                      description: clusterName is the name of the Cluster this object belongs to.
                      minLength: 1
                      type: string
                    failureDomain:
                      description: |-
                        failureDomain is the failure domain the machine will be created in.
                        Must match a key in the FailureDomains map stored on the cluster object.
                      type: string
                    infrastructureRef:
                      description: |-
                        infrastructureRef is a required reference to a custom resource
                        offered by an infrastructure provider.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: |-
                            If referring to a piece of an object instead of an entire object, this string
                            should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container within a pod, this would take on a value like:
                            "spec.containers{name}" (where "name" refers to the name of the container that triggered
                            the event) or if no container name is specified "spec.containers[2]" (container with
                            index 2 in this pod). This syntax is chosen only to have some well-defined way of
                            referencing a part of an object.
                          type: string
                        kind:
                          description: |-
                            Kind of the referent.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                          type: string
                        name:
                          description: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        namespace:
                          description: |-
                            Namespace of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                          type: string
                        resourceVersion:
                          description: |-
                            Specific resourceVersion to which this reference is made, if any.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                          type: string
                        uid:
                          description: |-
                            UID of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    nodeDrainTimeout:
                      description: |-
                        nodeDrainTimeout is the total amount of time that the controller will spend on draining a node.
                        The default value is 0, meaning that the node can be drained without any time limitations.
                        NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`
                      type: string
                    providerID:
                      description: |-
                        providerID is the identification ID of the machine provided by the provider.
                        This field must match the provider ID as seen on the node object corresponding to this machine.
                        This field is required by higher level consumers of cluster-api. Example use case is cluster autoscaler
                        with cluster-api as provider. Clean-up logic in the autoscaler compares machines to nodes to find out
                        machines at provider which could not get registered as Kubernetes nodes. With cluster-api as a
                        generic out-of-tree provider for autoscaler, this field is required by autoscaler to be
                        able to have a provider view of the list of machines. Another list of nodes is queried from the k8s apiserver
                        and then a comparison is done to find out unregistered machines and are marked for delete.
                        This field will be set by the actuators and consumed by higher level entities like autoscaler that will
                        be interfacing with cluster-api as generic provider.
                      type: string
                    version:
                      description: |-
                        version defines the desired Kubernetes version.
                        This field is meant to be optionally used by bootstrap providers.
                      type: string
                  required:
                    - bootstrap
                    - clusterName
                    - infrastructureRef
                  type: object
              type: object
          required:
            - clusterName
            - template
          type: object
        status:
          description: status is the observed state of MachinePool.
          properties:
            availableReplicas:
              description: availableReplicas is the number of available replicas (ready for at least minReadySeconds) for this MachinePool.
              format: int32
              type: integer
            bootstrapReady:
              description: bootstrapReady is the state of the bootstrap provider.
              type: boolean
            conditions:
              description: conditions define the current service state of the MachinePool.
              items:
                description: Condition defines an observation of a Cluster API resource operational state.
                properties:
                  lastTransitionTime:
                    description: |-
                      lastTransitionTime is the last time the condition transitioned from one status to another.
                      This should be when the underlying condition changed. If that is not known, then using the time when
                      the API field changed is acceptable.
                    format: date-time
                    type: string
                  message:
                    description: |-
                      message is a human readable message indicating details about the transition.
                      This field may be empty.
                    type: string
                  reason:
                    description: |-
                      reason is the reason for the condition's last transition in CamelCase.
                      The specific API may choose whether or not this field is considered a guaranteed API.
                      This field may not be empty.
                    type: string
                  severity:
                    description: |-
                      severity provides an explicit classification of Reason code, so the users or machines can immediately
                      understand the current situation and act accordingly.
                      The Severity field MUST be set only when Status=False.
                    type: string
                  status:
                    description: status of the condition, one of True, False, Unknown.
                    type: string
                  type:
                    description: |-
                      type of condition in CamelCase or in foo.example.com/CamelCase.
                      Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                      can be useful (see .node.status.conditions), the ability to deconflict is important.
                    type: string
                required:
                  - status
                  - type
                type: object
              type: array
            failureMessage:
              description: |-
                failureMessage indicates that there is a problem reconciling the state,
                and will be set to a descriptive error message.
              type: string
            failureReason:
              description: |-
                failureReason indicates that there is a problem reconciling the state, and
                will be set to a token value suitable for programmatic interpretation.
              type: string
            infrastructureReady:
              description: infrastructureReady is the state of the infrastructure provider.
              type: boolean
            nodeRefs:
              description: nodeRefs will point to the corresponding Nodes if it they exist.
              items:
                description: ObjectReference contains enough information to let you inspect or modify the referred object.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              type: array
            observedGeneration:
              description: observedGeneration is the latest generation observed by the controller.
              format: int64
              type: integer
            phase:
              description: |-
                phase represents the current phase of cluster actuation.
                E.g. Pending, Running, Terminating, Failed etc.
              type: string
            readyReplicas:
              description: readyReplicas is the number of ready replicas for this MachinePool. A machine is considered ready when the node has been created and is "Ready".
              format: int32
              type: integer
            replicas:
              description: replicas is the most recently observed number of replicas.
              format: int32
              type: integer
            unavailableReplicas:
              description: |-
                unavailableReplicas is the total number of unavailable machine instances targeted by this machine pool.
                This is the total number of machine instances that are still required for
                the machine pool to have 100% available capacity. They may either
                be machine instances that are running but not yet available or machine instances
                that still have not been created.
              format: int32
              type: integer
          type: object
      type: object
